
def apply_scale(x, y):
    scale=[-1,-1]
    return x * scale[0], y * scale[1]
# STARTOFDRAW
def draw(tu):
    tu.goto(0,0)
    tu.color('black')
    tu.begin_fill()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(-387.0,39.0))
    tu.down()
    tu.goto(apply_scale(-387.0,39.0))
    tu.up()
    tu.begin_fill()
    tu.color("#161616")
    tu.up()
    tu.goto(apply_scale(-387.0,39.0))
    tu.down()
    tu.goto(apply_scale(-276.0,39.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-276.0,39.0))
    tu.down()
    tu.goto(apply_scale(-276.0,-1.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-276.0,-1.0))
    tu.down()
    tu.goto(apply_scale(-388.0,1.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(-387.0,84.0))
    tu.down()
    tu.goto(apply_scale(-387.0,84.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(-387.0,84.0))
    tu.down()
    tu.goto(apply_scale(-276.0,82.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-276.0,82.0))
    tu.down()
    tu.goto(apply_scale(-275.0,43.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-275.0,43.0))
    tu.down()
    tu.goto(apply_scale(-387.0,44.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(-260.0,82.0))
    tu.down()
    tu.goto(apply_scale(-260.0,82.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(-260.0,82.0))
    tu.down()
    tu.goto(apply_scale(-181.0,81.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-181.0,81.0))
    tu.down()
    tu.goto(apply_scale(-181.0,44.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-181.0,44.0))
    tu.down()
    tu.goto(apply_scale(-261.0,43.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(-262.0,39.0))
    tu.down()
    tu.goto(apply_scale(-262.0,39.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(-262.0,39.0))
    tu.down()
    tu.goto(apply_scale(-180.0,38.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-180.0,38.0))
    tu.down()
    tu.goto(apply_scale(-181.0,1.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-181.0,1.0))
    tu.down()
    tu.goto(apply_scale(-262.0,-1.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(-166.0,83.0))
    tu.down()
    tu.goto(apply_scale(-166.0,83.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(-166.0,83.0))
    tu.down()
    tu.goto(apply_scale(-86.0,82.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-86.0,82.0))
    tu.down()
    tu.goto(apply_scale(-85.0,43.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-85.0,43.0))
    tu.down()
    tu.goto(apply_scale(-165.0,44.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(-166.0,39.0))
    tu.down()
    tu.goto(apply_scale(-166.0,39.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(-166.0,39.0))
    tu.down()
    tu.goto(apply_scale(-85.0,38.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-85.0,38.0))
    tu.down()
    tu.goto(apply_scale(-86.0,1.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-86.0,1.0))
    tu.down()
    tu.goto(apply_scale(-167.0,1.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(-70.0,80.0))
    tu.down()
    tu.goto(apply_scale(-70.0,80.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(-70.0,80.0))
    tu.down()
    tu.goto(apply_scale(11.0,80.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(11.0,80.0))
    tu.down()
    tu.goto(apply_scale(10.0,42.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(10.0,42.0))
    tu.down()
    tu.goto(apply_scale(-70.0,41.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(-70.0,37.0))
    tu.down()
    tu.goto(apply_scale(-70.0,37.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(10.0,37.0))
    tu.down()
    tu.goto(apply_scale(-71.0,39.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-71.0,39.0))
    tu.down()
    tu.goto(apply_scale(-71.0,-2.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-71.0,-2.0))
    tu.down()
    tu.goto(apply_scale(10.0,-2.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(10.0,-2.0))
    tu.down()
    tu.goto(apply_scale(10.0,34.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(10.0,34.0))
    tu.down()
    tu.goto(apply_scale(-68.0,37.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(-68.0,37.0))
    tu.down()
    tu.goto(apply_scale(10.0,36.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(10.0,36.0))
    tu.down()
    tu.goto(apply_scale(9.0,1.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(9.0,1.0))
    tu.down()
    tu.goto(apply_scale(10.0,-2.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(10.0,-2.0))
    tu.down()
    tu.goto(apply_scale(6.0,25.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(6.0,25.0))
    tu.down()
    tu.goto(apply_scale(-71.0,39.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-71.0,39.0))
    tu.down()
    tu.goto(apply_scale(-62.0,8.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(-62.0,8.0))
    tu.down()
    tu.goto(apply_scale(7.0,-3.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(24.0,80.0))
    tu.down()
    tu.goto(apply_scale(24.0,80.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(24.0,80.0))
    tu.down()
    tu.goto(apply_scale(105.0,80.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(105.0,80.0))
    tu.down()
    tu.goto(apply_scale(104.0,43.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(104.0,43.0))
    tu.down()
    tu.goto(apply_scale(24.0,41.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(23.0,37.0))
    tu.down()
    tu.goto(apply_scale(23.0,35.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(24.0,37.0))
    tu.down()
    tu.goto(apply_scale(105.0,35.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(105.0,35.0))
    tu.down()
    tu.goto(apply_scale(106.0,-1.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(106.0,-1.0))
    tu.down()
    tu.goto(apply_scale(25.0,-3.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(123.0,81.0))
    tu.down()
    tu.goto(apply_scale(123.0,81.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(123.0,81.0))
    tu.down()
    tu.goto(apply_scale(121.0,-13.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(121.0,-13.0))
    tu.down()
    tu.goto(apply_scale(150.0,-13.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(150.0,-13.0))
    tu.down()
    tu.goto(apply_scale(150.0,82.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(166.0,82.0))
    tu.down()
    tu.goto(apply_scale(166.0,82.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(166.0,82.0))
    tu.down()
    tu.goto(apply_scale(166.0,-13.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(166.0,-13.0))
    tu.down()
    tu.goto(apply_scale(193.0,-13.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(193.0,-13.0))
    tu.down()
    tu.goto(apply_scale(195.0,81.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(122.0,-29.0))
    tu.down()
    tu.goto(apply_scale(122.0,-30.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(122.0,-30.0))
    tu.down()
    tu.goto(apply_scale(121.0,-125.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(121.0,-125.0))
    tu.down()
    tu.goto(apply_scale(150.0,-126.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(150.0,-126.0))
    tu.down()
    tu.goto(apply_scale(150.0,-32.0))
    tu.up()
    tu.end_fill()
    tu.up()
    tu.goto(apply_scale(166.0,-30.0))
    tu.down()
    tu.goto(apply_scale(166.0,-30.0))
    tu.up()
    tu.begin_fill()
    tu.up()
    tu.goto(apply_scale(166.0,-30.0))
    tu.down()
    tu.goto(apply_scale(166.0,-125.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(166.0,-125.0))
    tu.down()
    tu.goto(apply_scale(193.0,-125.0))
    tu.up()
    tu.up()
    tu.goto(apply_scale(193.0,-125.0))
    tu.down()
    tu.goto(apply_scale(195.0,-30.0))
    tu.up()
    tu.end_fill()

if __name__ == '__main__':
    import turtle
    print('is main')
    tu =turtle.Turtle()
    screen = turtle.Screen()
    tu.penup()
    draw(tu)
    screen.tracer(0)
    screen.update()
    screen.mainloop()